{"version":3,"sources":["../src/redux.js"],"names":[],"mappings":";;;;;;;;QAOgB,kB,GAAA,kB;QAIA,Y,GAAA,Y;;kBAkBD,YAAoB;AAAA,MAAX,IAAW,yDAAJ,EAAI;;AACjC,MAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,UAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;AACD,MAAM,UAAU,KAAK,OAAL,IAAgB,EAAhC;AACA,MAAM,YAAY,OAAO,IAAP,CAAY,WAAW,EAAvB,CAAlB;AACA,MAAM,gBAAgB,KAAK,aAAL,IAAsB,UAAU,CAAV,CAAtB,IAAsC,EAA5D;AACA,MAAM,eAAe;AACnB,cAAU,aADS;AAEnB,eAAW,UAAU,OAAV,CAAkB,aAAlB,MAAqC,CAAC,CAAtC,GACT,UAAU,MAAV,CAAiB,aAAjB,CADS,GACyB;AAHjB,GAArB;;AAMA,WAAS,OAAT,GAA6C;AAAA,QAA5B,KAA4B,yDAAtB,YAAsB;AAAA,QAAR,MAAQ;;AAC3C,QAAI,OAAO,IAAP,KAAgB,SAAS,MAA7B,EAAqC;AACnC,WAAK,EAAL,YAAmB,QAAnB,IAA+B,KAAK,EAAL,CAAQ,OAAO,QAAf,CAA/B;AACA,0BAAY,KAAZ,IAAmB,UAAU,OAAO,QAApC;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF;;AAED,SAAO;AACL,oBADK;AAEL,UAAM,yBACJ,UAAC,KAAD;AAAA,aAAW,EAAE,UAAU,MAAM,KAAK,WAAX,EAAwB,QAApC,EAAX;AAAA,KADI,EAEJ,oBAAK,OAAL,EAAc,aAAd,EAA6B,KAAK,SAAlC,CAFI;AAFD,GAAP;AAMD,C;;AAzDD;;AACA;;;;;;AAEA,IAAM,WAAW;AACf,UAAQ;AADO,CAAjB;;AAIO,SAAS,kBAAT,CAA4B,YAA5B,EAA0C;AAC/C,WAAS,MAAT,GAAkB,YAAlB;AACD;;AAEM,SAAS,YAAT,CAAsB,QAAtB,EAAgC;AACrC,SAAO,EAAE,MAAM,SAAS,MAAjB,EAAyB,kBAAzB,EAAP;AACD;AACD","file":"redux.js","sourcesContent":["import { connect } from \"react-redux\";\nimport I18N from \"./i18n\";\n\nconst constant = {\n  update: \"I18N_UPDATE\"\n};\n\nexport function changeConstantName(constantName) {\n  constant.update = constantName;\n}\n\nexport function actionUpdate(language) {\n  return { type: constant.update, language };\n}\n/**\n * [description]\n * @param opts\n * @param opts.reducerName    - required opt, name of reducer which will be\n *                              register in redux\n * @param opts.locales        - object of locales [key] - name of locale\n *                              [value] - object of locales\n * @param opts.defaultLocale  - locale by default\n * @param opts.cb             - callback which call after change locale\n * @param opts.className      - className for i18n html inject\n *                              'i18n-text' by default\n * @return {reducer, I18N}    - reducer - reducer which you should register in\n *                              in redux systen with reducerName\n *                              I18N localization React component layer\n */\nexport default function(opts = {}) {\n  if (!opts.reducerName) {\n    throw new Error(\"Missing 'reducerName' in opts\");\n  }\n  const locales = opts.locales || {};\n  const languages = Object.keys(locales || {});\n  const defaultLocale = opts.defaultLocale || languages[0] || \"\";\n  const initialState = {\n    language: defaultLocale,\n    languages: languages.indexOf(defaultLocale) === -1 ?\n      languages.concat(defaultLocale) : languages\n  };\n\n  function reducer(state=initialState, action) {\n    if (action.type === constant.update) {\n      opts.cb instanceof Function && opts.cb(action.language);\n      return { ...state, language: action.language };\n    } else {\n      return state;\n    }\n  }\n\n  return {\n    reducer,\n    I18N: connect(\n      (state)=> ({ language: state[opts.reducerName].language})\n    )(I18N(locales, defaultLocale, opts.className))\n  }\n}\n"]}